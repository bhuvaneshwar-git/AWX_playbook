---
- name: Gather system information from all hosts
  hosts: all
  gather_facts: yes
  become: yes

  vars:
    export_dir: "/var/lib/awx/result"
    export_filename: "system_info_{{ inventory_hostname }}.json"

  tasks:
    # - name: Ensure sysinfo subfolder exists
    #   command: mkdir -p /var/lib/awx/projects/sysinfo
    #   run_once: true
      
    - name: Ensure export directory exists inside PVC
      file:
        path: "{{ export_dir }}"
        state: directory
        mode: '0755'
      run_once: true


    - name: Gather system information
      set_fact:
        sysinfo:
          hostname: "{{ ansible_hostname }}"
          os: "{{ ansible_distribution }} {{ ansible_distribution_version }}"
          kernel: "{{ ansible_kernel }}"
          architecture: "{{ ansible_architecture }}"
          cpu: "{{ ansible_processor[1] | default('Unknown') }}"
          ram_gb: "{{ (ansible_memtotal_mb / 1024) | round(1) }}"
          storage_gb: "{{ (ansible_mounts[0].size_total / 1024 / 1024 / 1024) | round(1) }}"
          ip_address: "{{ ansible_default_ipv4.address }}"
          timestamp: "{{ lookup('pipe', 'date +%Y-%m-%dT%H:%M:%S') }}"

    - name: Copy JSON data into PVC
      copy:
        dest: "{{ export_dir }}/{{ export_filename }}"
        content: "{{ sysinfo | to_nice_json }}"

    - name: Confirm export path
      debug:
        msg: "✅ System info for {{ inventory_hostname }} saved to {{ export_dir }}/{{ export_filename }}"

# ---------------- Second Play ----------------
- name: Merge all collected system info JSON files
  hosts: localhost
  become: no
  gather_facts: no

  vars:
    export_dir: "/var/lib/awx/result"
    merged_file: "sys_info.json"

  tasks:
    - name: Merge all JSON files using Python
      shell: |
        python3 - <<'PYCODE'
        import os, json, glob
        export_dir = "{{ export_dir }}"
        merged_path = os.path.join(export_dir, "{{ merged_file }}")

        all_data = []
        for path in glob.glob(os.path.join(export_dir, "*.json")):
            with open(path) as f:
                try:
                    data = json.load(f)
                    all_data.append(data)
                except json.JSONDecodeError:
                    pass

        with open(merged_path, "w") as out:
            json.dump(all_data, out, indent=2)
        PYCODE
      args:
        executable: /bin/bash

    - name: Confirm merged file path
      debug:
        msg: "✅ All system info merged into {{ export_dir }}/{{ merged_file }}"
